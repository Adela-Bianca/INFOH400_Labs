/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ulb.lisa.infoh400.labs2020.view;

import com.pixelmed.dicom.AttributeList;
import com.pixelmed.dicom.AttributeTag;
import com.pixelmed.dicom.DicomDirectory;
import com.pixelmed.dicom.DicomDirectoryRecord;
import com.pixelmed.dicom.DicomException;
import com.pixelmed.dicom.TagFromName;
import com.pixelmed.display.SourceImage;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;

/**
 *
 * @author Adela
 */
public class OpenDicomdirWindow extends javax.swing.JFrame {
    
    File selectedFile = null;
    
    /**
     * Creates new form OpenDiomdirWindow
     */
    public OpenDicomdirWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        dicomTree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        contenuattribeTextArea = new javax.swing.JTextArea();
        ImagesLabel = new javax.swing.JLabel();
        openDicomButton = new javax.swing.JButton();
        saveDicomdirButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("DICOMDIR");

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        dicomTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        dicomTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                dicomTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(dicomTree);

        contenuattribeTextArea.setColumns(20);
        contenuattribeTextArea.setRows(5);
        jScrollPane2.setViewportView(contenuattribeTextArea);

        ImagesLabel.setText("jLabel2");

        openDicomButton.setText("Open DICOMDIR");
        openDicomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openDicomButtonActionPerformed(evt);
            }
        });

        saveDicomdirButton.setText("Save to DICOMDIR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                    .addComponent(ImagesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(openDicomButton)
                        .addGap(30, 30, 30)
                        .addComponent(saveDicomdirButton))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openDicomButton)
                    .addComponent(saveDicomdirButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ImagesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openDicomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openDicomButtonActionPerformed
        String defaultDirectory = "D:\\MA1\\Q2\\Medical Information Systems\\Labos\\Labo 4\\DICOMDIR";
        JFileChooser fc = new JFileChooser(defaultDirectory);

        if( fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION ){
            selectedFile = fc.getSelectedFile(); //pointeur vers le fichier
            //System.out.println(selectedFile.getAbsolutePath());
            AttributeList list = new AttributeList();
            try {
                list.read(selectedFile);
                DicomDirectory ddr = new DicomDirectory(list); //on doit maintenant set le tree
                dicomTree.setModel(ddr);
            } catch (IOException | DicomException ex) {
                Logger.getLogger(OpenDicomdirWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
               // DicomDirectoryRecord ddr = (DicomDirectoryRecord) jTree.getLastSelectedPathComponent;//permet de get ce qui est selectionné dans le tree
            
}

    }//GEN-LAST:event_openDicomButtonActionPerformed

    private void dicomTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_dicomTreeValueChanged
        // fonction qui est utilisé à chaque fois qu'on change la selection dans le dicomtree
        DicomDirectoryRecord ddr = (DicomDirectoryRecord)dicomTree.getLastSelectedPathComponent();
        AttributeList  al = ddr.getAttributeList();// dictionnaire qui fait le lien entre tag dicom et les variable
        // ensuite on fait une liste qui contient tous les tag ou on peut faire un tag pour recuperer les valeurs
        String out="";
        for( AttributeTag tag: al.keySet() ){
            out+=tag + " : " + al.get(tag).getDelimitedStringValuesOrEmptyString()+"\n";
        }
        contenuattribeTextArea.setText(out);
        
        
        if(al.get(TagFromName.DirectoryRecordType).getSingleStringValueOrEmptyString().equalsIgnoreCase("IMAGE")){
        //pas utiliser le == pour comparer des string ca peut casser de schoses
            String referencedFileId = al.get(TagFromName.ReferencedFileID).getDelimitedStringValuesOrEmptyString();
            String baseDirectory = selectedFile.getParent();
            File path = new File(baseDirectory,referencedFileId);
            try {
                SourceImage sImg = new SourceImage(path.getAbsolutePath()); // "PixelMed" image from file
                //une fois qu'on a l'image on doit la rendre "lisible" pour java
                Image img = sImg.getBufferedImage(); // converts to "pure java" image
                //on ajoute mtn l'image lisible dans le label de l'interface
                ImagesLabel.setIcon(new ImageIcon(img));
            } catch (IOException ex) {//io c'est si le fichier n'existe pas et l'autre c'est erreur par rappor a dicom
                System.out.println("Couldn't open file");
            } catch (DicomException ex) {
                System.out.println("Dicom error finding file");
            }
        }
    }//GEN-LAST:event_dicomTreeValueChanged

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ImagesLabel;
    private javax.swing.JTextArea contenuattribeTextArea;
    private javax.swing.JTree dicomTree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton openDicomButton;
    private javax.swing.JButton saveDicomdirButton;
    // End of variables declaration//GEN-END:variables
}
